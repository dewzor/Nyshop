@model Webshop.Models.EditProduct

@{
    ViewBag.Title = Model.Name + " Details";
}
@if (User.IsInRole("Admin") || User.IsInRole("Employee"))
{
<h2>
    @Model.Name
</h2>
    using (Html.BeginForm("UploadImg", "Form", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <p>
            <img class="product-image" alt="@Model.Name" src="@Url.Content(Model.ImageUrl)"/>
            <input type="file" name="ProductImage" id="ProductImage"/>
            @Html.HiddenFor(model => model.Name)
            @Html.HiddenFor(model => model.ProductId)
            <input type="submit" value="UploadImg"/>
        </p>
    }

    using (Html.BeginForm("EditProduct", "Form", FormMethod.Post))
    {
     <div class="edit-product">
         <p class="edit-productname">
             <em>Product Name:</em>
             @Html.TextBoxFor(model => model.Name, new {name = "Name"})
         </p>

         <p>
             <em>Choose Category:</em>
             @*@Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.Categories))*@
             @Html.DropDownListFor(m => m.Category.CategoryId , (IEnumerable<SelectListItem>)ViewBag.Categories)
             @*@Html.DropDownList("CategoryName", (SelectList)ViewBag.Categories)*@
             or
             Add a new Category:
             @Html.TextBox("Newcategory")
             <button class="add-category">Add Category</button>
         </p>
         <p class="edit-price">
             <em>Price:</em>
             @Html.TextBoxFor(model => model.Price, new {name = "Price"})
         </p>
         <p class="edit-description">
             <em>Description:</em>
             @Html.TextAreaFor(model => model.Description, new {name = "Description"})
         </p>
         <p>
             <em>Show product in webstore:</em>
             @Html.CheckBoxFor(model => model.Published, new {name = "Published"})
         </p>
         @Html.HiddenFor(model => model.ProductId)


     </div>
     <input type="submit" value="Update Product"/>
 }
}
